# Configuración del DataSource

# Configuración del DataSource
spring.datasource.url=jdbc:mysql://localhost:3306/api_spring
# URL de la base de datos MySQL, se especifica el protocolo 'jdbc', el host 'localhost',
# el puerto '3306' y el nombre de la base de datos 'api_spring'.

spring.datasource.username=root
# Nombre de usuario para acceder a la base de datos MySQL.

spring.datasource.password=Nanana12*
# Contraseña del usuario para acceder a la base de datos MySQL.

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# Clase del controlador de la base de datos MySQL que se utilizará para la conexión.
# En este caso, se especifica el controlador para MySQL (com.mysql.jdbc.Driver).

# Configuración de JPA (Java Persistence API) y Hibernate
spring.jpa.hibernate.ddl-auto=update
# Configura el modo en que Hibernate actualizará automáticamente la estructura de la base de datos para que coincida con
# las entidades mapeadas cuando la aplicación se inicie.
# En este caso, se establece en 'update', lo que significa que Hibernate actualizará automáticamente la estructura de
# la base de datos sin eliminar los datos existentes.
# Si las tablas ya existen, Hibernate aplicará los cambios necesarios en la estructura de la base de datos para que
# coincida con las definiciones de las entidades.

spring.jpa.show-sql=true
# Configura si Hibernate mostrará las consultas SQL generadas en la consola de la aplicación.
# En este caso, se establece en 'true', lo que significa que las consultas SQL se mostrarán en la consola,
# lo que puede ser útil para depurar y comprender las operaciones realizadas por Hibernate en la base de datos.

